export declare function getGitHashForFiles(filesToHash: string[], path: string): Map<string, string>;
export declare function gitRevParseHead(path: string): string;
/**
 * getFileHashes() figures out both committed changes to the git tree as well as untracked
 * and uncommitted file changes.
 *
 * For some utilities the origin of a file hash (i.e. was it committed or not) is unimportant,
 * but for other tooling like the project graph daemon server it can leverage this distinction
 * when figuring out what expensive work to skip during project graph construction.
 *
 * We therefore return both a Map of all filenames to their hashes, as well as a Map of just
 * the uncommitted/untracked filenames to hashes.
 */
export declare function getFileHashes(path: string): {
    allFiles: Map<string, string>;
    untrackedUncommittedFiles: Map<string, string>;
};
/**
 * This utility is used to return a Map of filenames to hashes, where those filenames come from
 * git's knowledge of:
 *
 * - files which are untracked (newly created)
 * - files which are modified in some way (but NOT deleted) and either staged or unstaged
 */
export declare function getUntrackedAndUncommittedFileHashes(path: string): Map<string, string>;
