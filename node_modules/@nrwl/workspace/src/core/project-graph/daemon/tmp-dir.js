"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DAEMON_SOCKET_PATH = exports.DAEMON_OUTPUT_LOG_FILE = exports.DAEMON_DIR_FOR_CURRENT_WORKSPACE = void 0;
/**
 * Per workspace (to avoid subtle differences and issues), we want to have a deterministic
 * location within the OS's tmp directory where we write log files for background processes
 * and where we create the actual unix socket/named pipe for the daemon.
 */
const devkit_1 = require("@nrwl/devkit");
const app_root_1 = require("@nrwl/tao/src/utils/app-root");
const fs_extra_1 = require("fs-extra");
const os_1 = require("os");
const path_1 = require("path");
const crypto_1 = require("crypto");
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping
function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
}
/**
 * As part of deterministically generating a tmp dir for the daemon related outputs to go in,
 * we create a unique name for the current workspace based on the full normalized absolute
 * path to its root directory.
 */
function createUniqueNameForCurrentWorkspace() {
    let pathAsName = (0, devkit_1.normalizePath)(app_root_1.appRootPath).replace(
    // Replace the occurrences of / in the unix-style normalized path with a -
    new RegExp(escapeRegExp('/'), 'g'), '-');
    if (pathAsName[0] === '-') {
        pathAsName = pathAsName.slice(1);
    }
    return pathAsName;
}
/**
 * The unique names generated by createUniqueNameForCurrentWorkspace() can potentially be too long
 * to leverage for the daemon because the character length of unix sockets and named pipes is limited:
 *
 * - Windows: 256 chars (named pipe)
 * - Unix: 108 chars (unix socket)
 * - macOS and BSD: 104 chars (unix socket)
 *
 * We therefore hash them using a fixed length algorithm to be able to limit their length but still
 * have them be unique and deterministic. SHA-1 should be "good enough" for this specific purpose.
 */
const subDirForCurrentWorkspace = (0, crypto_1.createHash)('sha1')
    .update(createUniqueNameForCurrentWorkspace())
    .digest('hex')
    .slice(0, 32);
/**
 * E.g. on a mac the value for this will be something like:
 * /var/folders/zk/9ff5snsj71j2r07qht44w_nr0000gn/T/nx-daemon/{{subDirForCurrentWorkspace}}
 */
exports.DAEMON_DIR_FOR_CURRENT_WORKSPACE = (0, path_1.join)((0, os_1.tmpdir)(), 'nx-daemon', subDirForCurrentWorkspace);
(0, fs_extra_1.ensureDirSync)(exports.DAEMON_DIR_FOR_CURRENT_WORKSPACE);
exports.DAEMON_OUTPUT_LOG_FILE = (0, path_1.join)(exports.DAEMON_DIR_FOR_CURRENT_WORKSPACE, 'server.log');
(0, fs_extra_1.ensureFileSync)(exports.DAEMON_OUTPUT_LOG_FILE);
exports.DAEMON_SOCKET_PATH = (0, path_1.join)(exports.DAEMON_DIR_FOR_CURRENT_WORKSPACE, 
// As per notes above on socket/named pipe length limitations, we keep this intentionally short
'd.sock');
//# sourceMappingURL=tmp-dir.js.map