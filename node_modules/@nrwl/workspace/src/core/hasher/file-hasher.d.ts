import { HashingImpl } from './hashing-impl';
export declare class FileHasher {
    private readonly hashing;
    fileHashes: {
        [path: string]: string;
    };
    workspaceFiles: Set<string>;
    usesGitForHashing: boolean;
    private isInitialized;
    constructor(hashing: HashingImpl);
    clear(): void;
    /**
     * For the project graph daemon server use-case we can potentially skip expensive work
     * by leveraging knowledge of the uncommitted and untracked files, so the init() method
     * returns a Map containing this data.
     */
    init(): Map<string, string>;
    incrementalUpdate(updatedFiles: Map<string, string>, deletedFiles?: string[]): void;
    hashFile(path: string): string;
    ensureInitialized(): void;
    private applyFileHashes;
    private processPath;
}
export declare const defaultFileHasher: FileHasher;
