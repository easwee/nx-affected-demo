import type { Task } from '@nrwl/devkit';
import { TaskCacheStatus } from '../utilities/output';
import { LifeCycle } from './life-cycle';
import { TaskStatus } from './tasks-runner';
export declare class RunManyTerminalOutputLifeCycle implements LifeCycle {
    private readonly projectNames;
    private readonly tasks;
    private readonly args;
    private readonly taskOverrides;
    failedTasks: Task[];
    cachedTasks: Task[];
    skippedTasks: Task[];
    constructor(projectNames: string[], tasks: Task[], args: {
        target?: string;
        configuration?: string;
    }, taskOverrides: any);
    startCommand(): void;
    endCommand(): void;
    endTasks(taskResults: {
        task: Task;
        status: TaskStatus;
        code: number;
    }[]): void;
    printTaskTerminalOutput(task: Task, cacheStatus: TaskCacheStatus, terminalOutput: string): void;
}
